export CLUSTER_NAME="kubetestcluster"
export NODES=("testuser@kubmaster1" "testuser@kubmaster2" "testuser@kubmaster3" "testuser@kubminion1" "testuser@kubminion2")

#Role of each node, should be in same oder as of NODES
# MO - Master Only
# WO - Worker Only
# MW - Master and Worker
export NODE_ROLES=("MW" "MO" "MW" "WO" "WO")
export DNS_SERVER_IP=${DNS_SERVER_IP:-"192.168.3.10"}
export DNS_DOMAIN=${DNS_DOMAIN:-"cluster.local"}
export ADMISSION_CONTROL=NamespaceLifecycle,LimitRanger,ServiceAccount,SecurityContextDeny,DefaultStorageClass,ResourceQuota
export SERVICE_CLUSTER_IP_RANGE=${SERVICE_CLUSTER_IP_RANGE:-192.168.3.0/24}
export SERVICE_NODE_PORT_RANGE=${SERVICE_NODE_PORT_RANGE:-"1-32767"}
export CERT_DIR=${CERT_DIR:-/etc/kubernetes/pki}
export CERT_GROUP=${CERT_GROUP:-kube-cert}
export FLANNEL_NET=${FLANNEL_NET:-172.16.0.0/16}
export CLUSTER_DNS_EXTERNAL="" # If blank will setup first Master Node as API_SERVER_ADDRESS
export KUBECTL_CONTEXT="${CLUSTER_NAME}-context"
export GENERATE_CERTS="${GENERATE_CERTS:-true}"
export DEPLOY_TEST_DEPLOYMENT="${DEPLOY_TEST_DEPLOYMENT:-true}"

export KUBE_VERSION=${KUBE_VERSION:-} # kubernetes version, if not provided will get latest
export FLANNEL_VERSION=${FLANNEL_VERSION:-"0.5.5"} 
export ETCD_VERSION=${ETCD_VERSION:-"2.3.1"} 

# If true will deploy etcd cluster on MO and MW nodes. 
# If false, it is assumed that ETCD is already deployed 
export DEPLOY_ETCD="${DEPLOY_ETCD:-true}"  

#Below settings are used only when DEPLOY_ETCD is false

# , seprated endpoints with port and protocol
# Example HTTP "http://x.x.x.x:2379, http://x.x.x.x:2379"
# Example HTTPS "https://x.x.x.x:2379, https://x.x.x.x:2379"
export EXTERNAL_ETCD_ENDPOINTS=${EXTERNAL_ETCD_ENDPOINTS:-""}

# If HTTPS endpoints are used then set below settings for certificates. These files should exists on every node.
# Kube API Server will connect to etcd on Master Nodes and Flannel will connect to ETCD on Worker Nodes.
# Environment Variable Susbstitution is supported. All the variables defined in this file can be used.
# Along with these variables, below variables are generated by script and can be used for substitution
#   CURRENT_NODE_HOSTNAME:- Hostname of the node on which services are being deployed.
#   CURRENT_NODE_IP: Current Node internal first non loop back ip.


# Absolute ca cert file path
export EXTERNAL_ETCD_CA_CERT=${EXTERNAL_ETCD_CA_CERT:-'${CERT_DIR}/ca.crt'}

# If https is used with client Cert Authentication, set below settings
export EXTERNAL_ETCD_CLIENT_CERT=${EXTERNAL_ETCD_CLIENT_CERT:-'${CERT_DIR}/${CURRENT_NODE_HOSTNAME}.crt'}
export EXTERNAL_ETCD_CLIENT_KEY=${EXTERNAL_ETCD_CLIENT_CERT:-'${CERT_DIR}/${CURRENT_NODE_HOSTNAME}.key'}


export SSH_OPTS="-oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oLogLevel=ERROR"
